# Default values for terraboard.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/nkbud/terraboard
  tag: "__VERSION__"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  # Annotations to add to the service account
  annotations: {}

# Specify additional environment variables to be set in the container.
# For example:
# - name: FOO
#   value: ""
# - name: BAR
#   valueFrom:
#     secretKeyRef:
#       name: SECRET_NAME
#       key: BAR
additionalEnv: []

# Specify additional yaml config for Terraboard following the configuration scheme
# defined in the github repo
# Allow configuration of multiples providers which env/flags config doesn't support
# Check the github readme for more details about YAML configuration: https://github.com/camptocamp/terraboard#available-parameters

# additionalYamlConfig:
#   provider:
#     no-locks: true
#     no-versioning: true
#
#   aws:
#     - endpoint: http://minio:9000/
#       region: eu-west-1
#       s3:
#         - bucket: test-bucket
#           force-path-style: true
#           file-extension:
#             - .tfstate
#
#     - endpoint: http://minio:9000/
#       region: eu-west-1
#       s3:
#         - bucket: test-bucket2
#           force-path-style: true
#           file-extension:
#             - .tfstate

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

swagger:
  service:
    type: ClusterIP
    port: 80
    targetPort: 8081

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      mainPaths: ['/']
      swaggerPaths: ['/docs']
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
#  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
terraboard:
  base_url: "/"

# OAuth2 Proxy configuration for authentication gateway
oauth2Proxy:
  enabled: false
  image:
    repository: quay.io/oauth2-proxy/oauth2-proxy
    tag: v7.6.0
    pullPolicy: IfNotPresent
  
  # Configuration for Okta OIDC provider
  config:
    # Okta configuration
    provider: "oidc"
    oidcIssuerUrl: ""  # https://your-domain.okta.com/oauth2/default
    clientId: ""
    clientSecret: ""
    
    # Cookie configuration
    cookieSecret: ""  # Generate with: openssl rand -base64 32
    cookieDomain: ""
    cookieSecure: true
    cookieName: "_oauth2_proxy"
    cookieExpire: "168h"  # 7 days
    
    # Email domain restrictions (optional)
    emailDomains: "*"
    
    # Redirect URL configuration
    redirectUrl: ""  # https://your-domain.com/oauth2/callback
    
    # Upstream configuration
    upstreams: "http://terraboard:80"
    
    # Skip provider CA verification (for testing only)
    skipProviderCaCert: false
    
    # Set authorization header
    setAuthorizationHeader: true
    setXauthrequest: true
    
    # Pass basic auth, useful for some providers
    passBasicAuth: false
    
    # Pass access token via header
    passAccessToken: false
    
    # Skip authentication for specific paths
    skipAuthRegex: []
    
    # Request logging
    requestLogging: true
    
    # Standard logging
    standardLogging: true
    
    # Auth logging
    authLogging: true
    
    # Log level
    logLevel: "info"
    
    # Additional configuration
    extraArgs: []
      # - "--scope=openid profile email"
      # - "--insecure-oidc-allow-unverified-email"
  
  # Service configuration
  service:
    type: ClusterIP
    port: 80
    targetPort: 4180
    annotations: {}
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 2000
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
  
  # Pod security context
  podSecurityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: 2000
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity: {}
  
  # Liveness probe
  livenessProbe:
    httpGet:
      path: /ping
      port: 4180
    initialDelaySeconds: 30
    periodSeconds: 10
  
  # Readiness probe
  readinessProbe:
    httpGet:
      path: /ready
      port: 4180
    initialDelaySeconds: 5
    periodSeconds: 5

aws:
  region: ""
  bucket: ""
  dynamodb_table: ""
  file_extension: ""

db:
  host: ""
  name: ""
  user: ""
  password: ""
  sslmode: "disabled"